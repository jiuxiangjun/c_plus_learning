#include<iostream>
using namespace std;


//1.数组特点：放在一块连续的内存空间，数组中每个元素的数据类型都是相同的

//int main() {
//	//2.数组定义
//	/*1.数据类型 数组名【数组长度】
//	  2.数据类型 数组名【数组长度】={值1，值2....}
//	  3.数据类型 数组名【】={值1，值2....}*/
//	  /*int arr[5];
//	  arr[0] = 10;
//	  arr[1] = 20;
//	  arr[2] = 30;
//	  arr[3] = 40;
//	  arr[4] = 50;*/
//
//	  /*cout << arr[1] << endl;*/
//	  //int arr_2[5] = { 10,20,30,40,50 };//如果没有初始值补齐，会用0值填充
//	  //cout << arr_2[3] << endl;
//
//	  //for (int i = 0; i < 5; i++) {
//	  //	cout << arr_2[i] << endl;
//	  //}
//	//int arr_3[] = { 90,80,70,60 ,2 };
//	//cout << sizeof(arr_3) << endl;
//	//cout << sizeof(arr_3[2]) << endl;//整型占4位
//	//cout << sizeof(arr_3[4]) << endl;
//	//cout << sizeof(arr_3) / sizeof(arr_3[0]) << endl;
//
//	//cout << arr_3 << endl;//3.数组首地址，(int)arr_3可以变成10进制
//	//cout << &arr_3[0] << endl;//数组第一个元素的地址，同时也是数组的首地址，重合的，但第二个元素地址就不一样了
//	
//	
//	//4.数组名是一个常量，不可以赋值arr_3=10是错误
//
//
//	////5元素逆置
//
//	//int arr[5] = { 1,2,3,4,5 };
//	//
//	//for (int i = 0; i < 5; i++) {
//	//	cout << arr[i] << endl;
//	//}// 逆置前
//	//
//	//int start = 0;
//	//int end = sizeof(arr) / sizeof(arr[0]) - 1;
//	//
//	//while (start < end) {
//
//	//	//元素互换
//	//	int temp = arr[start];//临时值
//	//	arr[start] = arr[end];
//	//	arr[end] = temp;
//	//	//下标新
//	//	start++;
//	//	end--;
//
//	//}
//	////逆置后
//	//for (int i = 0; i < 5; i++) {
//	//	cout << arr[i] << endl;
//	//}
//
//
//
//
//
//	//6冒泡排序
//	//int arr[9] = { 4,2,8,0,5,7,1,3,9 };
//
//
//	//for (int i = 0; i < 9 - 1; i++)//总共要排序的轮数为元素个数-1
//	//{
//	//	for (int j = 0; j < 9 - i - 1; j++)//内层排序轮数
//	//	{
//	//		if (arr[j] > arr[j + 1]) {
//	//			int temp = arr[j];
//	//			arr[j] = arr[j + 1];
//	//			arr[j + 1] = temp;
//	//		}
//	//	}
//	//}
//	//for (int i = 0; i < 9; i++) {
//	//	cout << arr[i] << endl;
//	//}
//
//
//
//
//
//
//	//7二维数组
//
//
//	//定义1：数据类型 数组名【行数】【列数】
//	//int arr[2][3] = { {1,2,3},{4,5,6} };
//	///*arr[0][1] = 1;*/
//	//for (int i = 0; i < 2; i++) {
//	//	for (int j = 0; j < 3; j++)
//	//	{
//	//		cout << arr[i][j];
//	//	}cout << endl;
//	//}
//	//定义2：数据类型 数组名【行数】【列数】={{数据1，数据2}，{数据3，数据4}}
//	//定义2：数据类型 数组名【行数】【列数】={{数据1，数据2,数据3，数据4}}计算机自己会区分
//    //定义2：数据类型 数组名【    】【列数】={{数据1，数据2，数据3，数据4}}计算机也会自己区分，可以省去行数，不可以省去列数
//
//
////二维数组名称
//
////可以查看占用内存大小
//double  arr[2][3] = { {1,2,3},{4,5,6} };
//cout << sizeof(arr) << endl;
//cout << sizeof(arr[0]) << endl;//第一行占用内存多大
//cout << sizeof(arr[0][0]) << endl;//第一个元素占用内存
//cout << sizeof(arr) / sizeof(arr[0]) << endl;//行数
//cout << sizeof(arr[0]) / sizeof(arr[0][0]) << endl;//列数
//cout << arr << endl;//数组首地址
//cout << arr[0] << endl;//第一行首地址
//cout << &arr[0][0] << endl;//第一个元素首地址
//
//
//
//
//	return 0;
//}
